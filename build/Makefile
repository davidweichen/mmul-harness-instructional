# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.22

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /usr/bin/cmake

# The command to remove a file.
RM = /usr/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /home/gator/mmul-harness-instructional

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /home/gator/mmul-harness-instructional/build

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	/usr/bin/cmake -E echo No\ interactive\ CMake\ dialog\ available.
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	/usr/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start /home/gator/mmul-harness-instructional/build/CMakeFiles /home/gator/mmul-harness-instructional/build//CMakeFiles/progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start /home/gator/mmul-harness-instructional/build/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named benchmark

# Build rule for target.
benchmark: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 benchmark
.PHONY : benchmark

# fast build rule for target.
benchmark/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark.dir/build.make CMakeFiles/benchmark.dir/build
.PHONY : benchmark/fast

#=============================================================================
# Target rules for targets named benchmark-basic

# Build rule for target.
benchmark-basic: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 benchmark-basic
.PHONY : benchmark-basic

# fast build rule for target.
benchmark-basic/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-basic.dir/build.make CMakeFiles/benchmark-basic.dir/build
.PHONY : benchmark-basic/fast

#=============================================================================
# Target rules for targets named benchmark-blas

# Build rule for target.
benchmark-blas: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 benchmark-blas
.PHONY : benchmark-blas

# fast build rule for target.
benchmark-blas/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blas.dir/build.make CMakeFiles/benchmark-blas.dir/build
.PHONY : benchmark-blas/fast

#=============================================================================
# Target rules for targets named benchmark-blocked

# Build rule for target.
benchmark-blocked: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 benchmark-blocked
.PHONY : benchmark-blocked

# fast build rule for target.
benchmark-blocked/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blocked.dir/build.make CMakeFiles/benchmark-blocked.dir/build
.PHONY : benchmark-blocked/fast

#=============================================================================
# Target rules for targets named bench-blocked

# Build rule for target.
bench-blocked: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 bench-blocked
.PHONY : bench-blocked

# fast build rule for target.
bench-blocked/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench-blocked.dir/build.make CMakeFiles/bench-blocked.dir/build
.PHONY : bench-blocked/fast

benchmark.o: benchmark.cpp.o
.PHONY : benchmark.o

# target to build an object file
benchmark.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark.dir/build.make CMakeFiles/benchmark.dir/benchmark.cpp.o
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench-blocked.dir/build.make CMakeFiles/bench-blocked.dir/benchmark.cpp.o
.PHONY : benchmark.cpp.o

benchmark.i: benchmark.cpp.i
.PHONY : benchmark.i

# target to preprocess a source file
benchmark.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark.dir/build.make CMakeFiles/benchmark.dir/benchmark.cpp.i
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench-blocked.dir/build.make CMakeFiles/bench-blocked.dir/benchmark.cpp.i
.PHONY : benchmark.cpp.i

benchmark.s: benchmark.cpp.s
.PHONY : benchmark.s

# target to generate assembly for a file
benchmark.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark.dir/build.make CMakeFiles/benchmark.dir/benchmark.cpp.s
	$(MAKE) $(MAKESILENT) -f CMakeFiles/bench-blocked.dir/build.make CMakeFiles/bench-blocked.dir/benchmark.cpp.s
.PHONY : benchmark.cpp.s

dgemm-basic.o: dgemm-basic.cpp.o
.PHONY : dgemm-basic.o

# target to build an object file
dgemm-basic.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-basic.dir/build.make CMakeFiles/benchmark-basic.dir/dgemm-basic.cpp.o
.PHONY : dgemm-basic.cpp.o

dgemm-basic.i: dgemm-basic.cpp.i
.PHONY : dgemm-basic.i

# target to preprocess a source file
dgemm-basic.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-basic.dir/build.make CMakeFiles/benchmark-basic.dir/dgemm-basic.cpp.i
.PHONY : dgemm-basic.cpp.i

dgemm-basic.s: dgemm-basic.cpp.s
.PHONY : dgemm-basic.s

# target to generate assembly for a file
dgemm-basic.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-basic.dir/build.make CMakeFiles/benchmark-basic.dir/dgemm-basic.cpp.s
.PHONY : dgemm-basic.cpp.s

dgemm-blas.o: dgemm-blas.cpp.o
.PHONY : dgemm-blas.o

# target to build an object file
dgemm-blas.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blas.dir/build.make CMakeFiles/benchmark-blas.dir/dgemm-blas.cpp.o
.PHONY : dgemm-blas.cpp.o

dgemm-blas.i: dgemm-blas.cpp.i
.PHONY : dgemm-blas.i

# target to preprocess a source file
dgemm-blas.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blas.dir/build.make CMakeFiles/benchmark-blas.dir/dgemm-blas.cpp.i
.PHONY : dgemm-blas.cpp.i

dgemm-blas.s: dgemm-blas.cpp.s
.PHONY : dgemm-blas.s

# target to generate assembly for a file
dgemm-blas.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blas.dir/build.make CMakeFiles/benchmark-blas.dir/dgemm-blas.cpp.s
.PHONY : dgemm-blas.cpp.s

dgemm-blocked.o: dgemm-blocked.cpp.o
.PHONY : dgemm-blocked.o

# target to build an object file
dgemm-blocked.cpp.o:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blocked.dir/build.make CMakeFiles/benchmark-blocked.dir/dgemm-blocked.cpp.o
.PHONY : dgemm-blocked.cpp.o

dgemm-blocked.i: dgemm-blocked.cpp.i
.PHONY : dgemm-blocked.i

# target to preprocess a source file
dgemm-blocked.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blocked.dir/build.make CMakeFiles/benchmark-blocked.dir/dgemm-blocked.cpp.i
.PHONY : dgemm-blocked.cpp.i

dgemm-blocked.s: dgemm-blocked.cpp.s
.PHONY : dgemm-blocked.s

# target to generate assembly for a file
dgemm-blocked.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles/benchmark-blocked.dir/build.make CMakeFiles/benchmark-blocked.dir/dgemm-blocked.cpp.s
.PHONY : dgemm-blocked.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... rebuild_cache"
	@echo "... bench-blocked"
	@echo "... benchmark"
	@echo "... benchmark-basic"
	@echo "... benchmark-blas"
	@echo "... benchmark-blocked"
	@echo "... benchmark.o"
	@echo "... benchmark.i"
	@echo "... benchmark.s"
	@echo "... dgemm-basic.o"
	@echo "... dgemm-basic.i"
	@echo "... dgemm-basic.s"
	@echo "... dgemm-blas.o"
	@echo "... dgemm-blas.i"
	@echo "... dgemm-blas.s"
	@echo "... dgemm-blocked.o"
	@echo "... dgemm-blocked.i"
	@echo "... dgemm-blocked.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

